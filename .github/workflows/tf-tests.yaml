name: Test Terraform Modules

on:
  pull_request:
    paths:
      - "infra/terraform/modules/**"
    types:
      - opened
      - reopened
      - synchronize

env:
  MODULES_PATH: infra/terraform/modules

jobs:
  find-testable-modules:
    name: Find Testable Modules
    runs-on: ubuntu-latest
    outputs:
      testable_modules: ${{ steps.changed-testable-modules.outputs.testable_modules }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get list of changed files
        id: changed-files
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          changed_files=$(gh pr diff --name-only ${{ github.event.pull_request.number }} | sort --unique)
          echo "Changed files:"
          echo "$changed_files"
          {
            echo "changed_files<<EOF"
            echo "$changed_files"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Get modules with a 'tests' subdirectory
        id: testable-modules
        run: |
          testable_modules=$(find ${{ env.MODULES_PATH }} -type d -name tests -exec dirname {} \; | sort --unique)
          echo "Testable modules:"
          echo "$testable_modules"
          {
            echo "testable_modules<<EOF"
            echo "$testable_modules"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Get testable modules that were changed in the PR
        id: changed-testable-modules
        run: |
          changed_files="${{ steps.changed-files.outputs.changed_files }}"
          testable_modules="${{ steps.testable-modules.outputs.testable_modules }}"

          changed_testable_modules=()
          for file in $changed_files; do
            for module in $testable_modules; do
              if [[ "$file" == *"$module/"* ]]; then
                changed_testable_modules+=("$module")
                echo "Found changes in module: $module"
              fi
            done
          done

          changed_testable_modules=($(printf '%s\n' "${changed_testable_modules[@]}" | sort --unique))

          # Format as JSON array for use in the next job's matrix
          if [ ${#changed_testable_modules[@]} -eq 0 ]; then
            json_array="[]"
          else
            json_array=$(printf "%s\n" "${changed_testable_modules[@]}" | jq -R . | jq -s -c .)
          fi

          echo "Changed testable modules found: ${json_array}"
          echo "testable_modules=${json_array}" >> "$GITHUB_OUTPUT"

  run-tests:
    name: Test ${{ matrix.module }} (TF ${{ matrix.terraform-version }})
    needs: find-testable-modules
    if: needs.find-testable-modules.outputs.testable_modules != '[]'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.find-testable-modules.outputs.testable_modules) }}
        terraform-version: ["1.12.1"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform-version }}

      - name: Terraform Init
        working-directory: ${{ matrix.module }}
        run: |
          echo "Initializing Terraform for module: ${{ matrix.module }}"
          terraform init

      - name: Terraform Test
        working-directory: ${{ matrix.module }}
        continue-on-error: true
        run: |
          echo "Running tests for module: ${{ matrix.module }}"
          terraform test
